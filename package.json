{
  "name": "soundshine-bot",
  "version": "1.0.2",
  "description": "soundSHINE Bot for Discord",
  "homepage": "https://github.com/n3m01726/soundshine-bot#readme",
  "bugs": {
    "url": "https://github.com/n3m01726/soundshine-bot/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/n3m01726/soundshine-bot.git"
  },
  "main": "index.js",
  "type": "module",
  "license": "ISC",
  "author": "",
  "private": false,
  "engines": {
    "node": ">=18.0.0"
  },
  "keywords": [
    "discord",
    "bot",
    "soundshine",
    "music",
    "nodejs",
    "javascript"
  ],
  "files": [
    "index.js",
    "scripts/",
    "utils/",
    "tests/"
  ],
  "overrides": {
    "glob": "^9.0.0"
  },
  "dependencies": {
    "@babel/generator": "^7.28.0",
    "@babel/parser": "^7.28.0",
    "@babel/traverse": "^7.28.0",
    "@babel/types": "^7.28.2",
    "@discordjs/opus": "^0.10.0",
    "@discordjs/voice": "^0.18.0",
    "airtable": "^0.12.2",
    "axios": "^1.12.0",
    "better-sqlite3": "^12.2.0",
    "chalk": "^5.5.0",
    "compression": "^1.8.1",
    "cors": "^2.8.5",
    "discord.js": "^14.21.0",
    "dotenv": "^17.2.1",
    "eslint": "^9.32.0",
    "express": "^5.1.0",
    "express-rate-limit": "^8.0.1",
    "fast-glob": "^3.3.3",
    "helmet": "^8.1.0",
    "inquirer": "^12.9.0",
    "node-cron": "^4.2.1",
    "octokit": "^5.0.3",
    "prom-client": "^15.1.3",
    "strip-ansi": "^7.1.0",
    "winston": "^3.17.0",
    "zod": "^4.0.15"
  },
  "devDependencies": {
    "@eslint/js": "^9.32.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "dotenv-cli": "^10.0.0",
    "globals": "^16.3.0",
    "husky": "^9.1.7",
    "nodemon": "^3.1.10",
    "supertest": "^7.1.4",
    "vitest": "^3.2.4"
  },
  "scripts": {
    "dev": "dotenv -e .env.dev -- nodemon index.js",
    "prod": "dotenv -e .env.prod -- node index.js",
    "deploy:dev": "dotenv -e .env.dev -- node scripts/bot/deploy-commands.js --dev",
    "clear:dev": "dotenv -e .env.dev -- node scripts/bot/deploy-commands.js --dev --clear",
    "clear:global": "dotenv -e .env.prod -- node scripts/bot/deploy-commands.js --global --clear",
    "deploy:global": "dotenv -e .env.prod -- node scripts/bot/deploy-commands.js --global",
    "test": "vitest --config config/vitest.config.js",
    "test:coverage": "vitest --coverage --config config/vitest.config.js",
    "test:integration": "vitest tests/integration/ --config config/vitest.config.js",
    "test:performance": "vitest tests/performance/ --config config/vitest.config.js",
    "test:stress": "vitest tests/stress/ --config config/vitest.config.js",
    "test:security": "vitest tests/security.test.js --config config/vitest.config.js",
    "lint": "eslint bot/ api/ core/ --config config/.eslintrc.js",
    "lint:fix": "eslint bot/ api/ core/ --config config/.eslintrc.js --fix",
    "format": "eslint bot/ api/ core/ --config config/.eslintrc.js --fix",
    "fix:all": "eslint bot/ api/ core/ --config config/.eslintrc.js --fix && npm run format",
    "check-syntax": "node --check index.js api/server.js core/config.js core/loadFiles.js utils/logger.js utils/errorHandler.js",
    "security:audit": "node scripts/security/audit.js",
    "security:fix": "node scripts/security/fix-permissions.js",
    "security:check": "npm run security:fix && npm run security:audit && npm run test:security",
    "deploy:secure": "NODE_ENV=production node scripts/security/deploy-secure.js",
    "docker:build": "docker build -t soundshine-bot ./docker",
    "docker:run": "docker run -p 3000:3000 soundshine-bot",
    "docker:compose": "docker-compose -f docker/docker-compose.yml up -d",
    "git-actions": "node scripts/git/git-actions.js",
    "db:deploy": "node bot/utils/database.js",
    "prepare": "husky install",
    "postinstall": "husky install",
    "context": "node ./tools/projectContext.js",
    "context:md": "node ./scripts/tools/projectContext.js --md",
    "context:full": "node ./scripts/tools/projectContext.js --md --full",
    "cleanup": "node scripts/dev/cleanup.js",
    "cleanup:dry": "node scripts/dev/cleanup.js --dry-run"
  }
}
