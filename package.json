{
  "name": "soundshine-bot",
  "version": "2.0.0",
  "description": "soundSHINE Bot for Discord",
  "homepage": "https://github.com/n3m01726/soundshine-bot#readme",
  "bugs": {
    "url": "https://github.com/n3m01726/soundshine-bot/issues"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/n3m01726/soundshine-bot.git"
  },
  "main": "index.js",
  "type": "module",
  "license": "ISC",
  "author": "",
  "private": false,
  "engines": {
    "node": ">=18.0.0"
  },
  "keywords": [
    "discord",
    "bot",
    "soundshine",
    "music",
    "nodejs",
    "javascript"
  ],
  "files": [
    "index.js",
    "scripts/",
    "utils/",
    "tests/"
  ],
  "overrides": {
    "glob": "^9.0.0"
  },
  "dependencies": {
    "@babel/generator": "^7.27.5",
    "@babel/parser": "^7.27.7",
    "@babel/traverse": "^7.27.7",
    "@babel/types": "^7.27.7",
    "@discordjs/opus": "^0.10.0",
    "@discordjs/voice": "^0.18.0",
    "axios": "^1.9.0",
    "better-sqlite3": "^12.1.0",
    "chalk": "^4.1.2",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "discord-rpc": "^4.0.1",
    "discord.js": "^14.0.0",
    "dotenv": "^16.0.0",
    "eslint": "^9.29.0",
    "express": "^5.1.0",
    "express-rate-limit": "^7.1.5",
    "helmet": "^8.0.0",
    "node-cron": "^4.1.1",
    "prom-client": "^15.1.3",
    "winston": "^3.3.3",
    "zod": "^3.25.74"
  },
  "devDependencies": {
    "@eslint/js": "^9.30.0",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "globals": "^16.2.0",
    "husky": "^9.1.7",
    "nodemon": "^3.0.2",
    "supertest": "^6.3.3",
    "vitest": "^3.2.4"
  },
  "scripts": {
    "start": "node index.js",
    "dev": "nodemon index.js",
    "prestart": "npm run security:check",
    "migrate:logs": "node scripts/dev/loggerMigrate.js",
    "test": "vitest --config config/vitest.config.js",
    "test:watch": "vitest --watch --config config/vitest.config.js",
    "test:ui": "vitest --ui --config config/vitest.config.js",
    "test:coverage": "vitest --coverage --config config/vitest.config.js",
    "test:integration": "vitest tests/integration/ --config config/vitest.config.js",
    "test:performance": "vitest tests/performance/ --config config/vitest.config.js",
    "test:stress": "vitest tests/stress/ --config config/vitest.config.js",
    "test:all": "node scripts/dev/run-tests.js",
    "test:optimizations": "node scripts/dev/test-optimizations.js",
    "lint": "eslint bot/ api/ core/ --config config/.eslintrc.js",
    "lint:fix": "eslint bot/ api/ core/ --config config/.eslintrc.js --fix",
    "format": "npm run lint:fix",
    "fix:all": "npm run lint:fix",
    "check:all": "npm run lint",
    "fix:ephemeral": "node scripts/bot/fix-ephemeral.js",
    "pre-push": "node scripts/dev/pre-commit.js",
    "security:check": "node scripts/infra/security-check.js",
    "deploy:dev": "node scripts/bot/deploy-commands.js --dev",
    "deploy:prod": "node scripts/bot/deploy-commands.js --global",
    "deploy:staging": "bash scripts/infra/deploy.sh staging",
    "deploy:production": "bash scripts/infra/deploy.sh production",
    "docker:build": "docker build -t soundshine-bot ./docker",
    "docker:run": "docker run -p 3000:3000 soundshine-bot",
    "docker:compose": "docker-compose -f docker/docker-compose.yml up -d",
    "git-actions": "node scripts/git/git-actions.js",
    "db:deploy": "node bot/utils/database.js",
    "prepare": "husky install",
    "postinstall": "husky install",
    "tree": "node scripts/dev/tree.js"
  },
  "eslintConfig": {
    "extends": [
      "eslint:recommended",
      "plugin:node/recommended"
    ],
    "env": {
      "node": true,
      "es2021": true
    },
    "parserOptions": {
      "ecmaVersion": 12,
      "sourceType": "module"
    },
    "rules": {
      "no-console": "warn",
      "no-unused-vars": "warn",
      "prefer-const": "error",
      "eqeqeq": "error",
      "curly": "error",
      "semi": [
        "error",
        "always"
      ],
      "quotes": [
        "error",
        "single"
      ],
      "indent": [
        "error",
        2
      ],
      "node/no-unsupported-features/es-syntax": [
        "error",
        {
          "ignores": [
            "modules"
          ]
        }
      ]
    }
  }
}

