{
  "projectName": "soundshine-bot",
  "description": "Bot Discord modulaire pour webradio communautaire.",
  "criticalFiles": [
    "index.js",
    "core/services/AppState.js",
    "core/utils/retry.js",
    "core/utils/secureLogger.js",
    "bot/events/interactionCreate.js",
    "core/utils/rateLimiter.js",
    "core/handlers/commandHandler.js"
  ],
  "envFiles": [
    ".env",
    ".env.dev",
    ".env.prod"
  ],
  "stack": {
    "runtime": "Node.js",
    "framework": "discord.js v14.21.0",
    "database": "better-sqlite3",
    "logger": "logger.js + secureLogger.js",
    "validation": "zod",
    "tests": [
      "vitest",
      "stress-test maison"
    ],
    "devops": [
      "docker",
      "CI/CD",
      "husky",
      "eslint"
    ]
  },
  "architecture": {
    "style": "modulaire",
    "entryPoint": "index.js",
    "handlers": [
      "commands",
      "events",
      "tasks",
      "services",
      "api"
    ],
    "api": {
      "type": "Express.js",
      "routes": [
        "REST",
        "secured middleware"
      ]
    },
    "appState": "core/services/AppState.js"
  },
  "env": {
    "envFiles": [
      ".env",
      ".env.dev",
      ".env.prod"
    ],
    "currentEnv": "undefined"
  },
  "projectTree": ".env\n.env.dev\n.env.prod\n[.github]\n  [workflows]\n    ci-cd.yml\n.gitignore\n[api]\n  index.js\n  [middlewares]\n    cors.js\n    helmet.js\n    loggingAPI.js\n    validation.js\n  [routes]\n    alerts.js\n    health.js\n    logs.js\n    metrics.js\n    playlist-update.js\n  routes.js\n[bot]\n  client.js\n  [commands]\n    drink.js\n    force.js\n    getwallpaper.js\n    nowplaying.js\n    ping.js\n    play.js\n    schedule.js\n    stats.js\n    stop.js\n    suggest-delete.js\n    suggest-edit.js\n    suggest-list.js\n    suggest.js\n  config.js\n  [events]\n    interactionCreate.js\n  [handlers]\n    handlePlaylistSelect.js\n    loadCommands.js\n    loadEvents.js\n  logger.js\n  startup.js\n  [tasks]\n    logMemory.js\n    updateStatus.js\n  [utils]\n    alerts.js\n    cache.js\n    checkStreamOnline.js\n    database.js\n    genres.js\n    globalConfig.js\n    metrics.js\n    socialChannel.js\n    validateURL.js\n    yoda-config.js\n    yoda.js\n    yodaify-reply.js\n[config]\n  .dockerignore\n  .eslintrc.js\n  .eslintrc.json\n  .gitattributes\n  .gitconfig\n  eslint.config.js\n  jest.config.js\n  vitest.config.js\n[core]\n  lifecycle.js\n  [middleware]\n    security.js\n  monitor.js\n  [services]\n    AppState.js\n  [utils]\n    rateLimiter.js\n    retry.js\n    secureLogger.js\n    validation.js\n[data]\n  schedule.txt\n  yodaConfig.json\n[databases]\n[docker]\n  docker-compose.yml\n  Dockerfile\n[docs]\n  ENVIRONMENT.md\n  OPTIMIZATIONS.md\n  PLAN_OPTIMISATION.md\n  REFACTORING_SUMMARY.md\n  SECURITY.md\n  STRUCTURE.md\nindex.js\npackage-lock.json\npackage.json\nREADME.md\n[scripts]\n  [bot]\n    clear-commands.js\n    deploy-commands.js\n    fix-ephemeral.js\n    start-bot.sh\n    test-optimizations.js\n  [dev]\n    loggerMigrate.js\n    pre-commit.js\n    run-tests.js\n    setup-user.sh\n    test-optimizations.js\n  [git]\n    checkSecrets.js\n    gh-issues.js\n    git-actions.js\n  [infra]\n    deploy.sh\n    security-check.js\n    setup-security-aliases.sh\n    soundshine-dev-env.bat\n  README.md\n  [tools]\n    projectContext.js\n    tree.js\n[tests]\n  config.test.js\n  core.config.test.js\n  errorHandler.test.js\n  [integration]\n    api.test.js\n    commands.test.js\n    events.test.js\n    handlers.test.js\n    tasks.test.js\n    utils.test.js\n  logger.test.js\n  [mocks]\n    express.mock.js\n  [performance]\n    load.test.js\n  README.md\n  security.test.js\n  [stress]\n    stress.test.js\n  vitest.setup.js\n[utils]\n  cache.js\n  database.js"
}